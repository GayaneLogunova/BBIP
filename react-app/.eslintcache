[{"/home/gaya/Documents/Work/Kursach/kursach/react-app/src/PrivateRoute.js":"1","/home/gaya/Documents/Work/Kursach/kursach/react-app/src/App.js":"2","/home/gaya/Documents/Work/Kursach/kursach/react-app/src/RenderByTitle.js":"3","/home/gaya/Documents/Work/Kursach/kursach/react-app/src/TaskCommits.js":"4","/home/gaya/Documents/Work/Kursach/kursach/react-app/src/Dashboard.js":"5","/home/gaya/Documents/Work/Kursach/kursach/react-app/src/index.js":"6","/home/gaya/Documents/Work/Kursach/kursach/react-app/src/FailedTasks.js":"7","/home/gaya/Documents/Work/Kursach/kursach/react-app/src/Registration.js":"8","/home/gaya/Documents/Work/Kursach/kursach/react-app/src/RenderByName.js":"9","/home/gaya/Documents/Work/Kursach/kursach/react-app/src/RenderAllTasks.js":"10","/home/gaya/Documents/Work/Kursach/kursach/react-app/src/Search.js":"11","/home/gaya/Documents/Work/Kursach/kursach/react-app/src/reportWebVitals.js":"12"},{"size":478,"mtime":1619435427702,"results":"13","hashOfConfig":"14"},{"size":724,"mtime":1619737173742,"results":"15","hashOfConfig":"14"},{"size":1567,"mtime":1620595171486,"results":"16","hashOfConfig":"14"},{"size":2668,"mtime":1620605107620,"results":"17","hashOfConfig":"14"},{"size":3607,"mtime":1620606018186,"results":"18","hashOfConfig":"14"},{"size":556,"mtime":1619431125895,"results":"19","hashOfConfig":"14"},{"size":2134,"mtime":1620605103196,"results":"20","hashOfConfig":"14"},{"size":2315,"mtime":1619738134123,"results":"21","hashOfConfig":"14"},{"size":5563,"mtime":1620595599975,"results":"22","hashOfConfig":"14"},{"size":1590,"mtime":1620606741645,"results":"23","hashOfConfig":"14"},{"size":7372,"mtime":1620606923476,"results":"24","hashOfConfig":"14"},{"size":362,"mtime":1606844721704,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"1nvldrj",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/gaya/Documents/Work/Kursach/kursach/react-app/src/PrivateRoute.js",["59"],"import React from 'react';\nimport { Route, Redirect } from 'react-router';\n\nexport const PrivateRoute = ({ component: Component, ...rest}) => (\n    <Route\n        {...rest}\n        render={props =>\n            localStorage.getItem(\"authToken\") == \"true\" ? (\n              console.log(\"print component\"),\n                <Component {...props}/>\n            ) : ( \n              console.log(\"redirect\"),\n                <Redirect to='/registration'/> \n            )}\n    />\n  ); \n","/home/gaya/Documents/Work/Kursach/kursach/react-app/src/App.js",[],["60","61"],"/home/gaya/Documents/Work/Kursach/kursach/react-app/src/RenderByTitle.js",["62","63"],"import React from 'react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport RenderByName from './RenderByName';\nimport './accordion.css';\n\nfunction NameAccordion(props) {\n    var mySet = new Set();\n    return (\n        <div className=\"accordion-body\">\n            {props.data.map((sent) => {\n                if (sent[1] == props.position && !mySet.has(sent[2])) {\n                    mySet.add(sent[2]);\n                    return ( \n                        <div>\n                            <Accordion>\n                                <AccordionSummary\n                                expandIcon={<ExpandMoreIcon />}\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\">\n                                    <Typography>\n                                        {sent[2]}\n                                    </Typography>\n                                </AccordionSummary>\n                                <AccordionDetails>\n                                    <RenderByName data={props.data} name={sent[2]}/>\n                                </AccordionDetails>\n                            </Accordion>\n                        </div>\n                    );\n                }\n            })}\n        </div>\n    );\n}\n\nexport default NameAccordion;","/home/gaya/Documents/Work/Kursach/kursach/react-app/src/TaskCommits.js",["64","65","66","67","68","69","70","71","72"],"import React from 'react';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport {Card, Form, Button} from \"react-bootstrap\";\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport './accordion.css';\n\n\nclass TaskCommits extends React.Component {\n    constructor(props) {\n        super(props);\n        this.compare = this.compare.bind(this);\n    }\n\n    compare(first, second) {\n        let myFirst = first[5];\n        let mySecond = second[5];\n        if (first[5].length < 5) {\n            myFirst = \"0\" + first; \n        }\n        if (second[5].length < 5) {\n            mySecond = \"0\" + second;\n        }\n        if (myFirst > mySecond) {\n            console.log(\"first > second: \" + first[5] + \" \" + second[5]);\n            return -1;\n        }\n        else {\n            console.log(\"second > first: \" + first[5] + \" \" + second[5]);\n            return 1;\n        }\n    }\n\n\n    render () {\n        var items = [];\n        this.props.data.map(function(task) {\n            if (task[4] != \"pending\") {\n                items.push(task);\n            }\n        }) \n        items.sort(this.compare);\n\n\n        return (\n            \n            <Card style={{margin: \"2%\", padding: \"2%\"}} >\n            <Card.Title> Tasks Commits </Card.Title>\n            <div style={{overflowY: \"scroll\", height: \"300px\"}}>\n            {items.map(function(task) {\n                if (task[4] == \"done\") {\n                    return (\n                        <Card>                    \n                            <ListItem className=\"done-text\">\n                                <ListItemText  primary={\"task id: \" + task[0] + \"  \" + task[3] + \"  \" + task[4]} secondary={task[2]}/>\n                                <p>{task[5]}</p>\n                            </ListItem>\n                        </Card>\n                        );\n                }\n                else {\n                    return (\n                    <Card>                    \n                        <ListItem className=\"failed-text\">\n                            <ListItemText  primary={\"task id: \" + task[0] + \"  \" + task[3] + \"  \" + task[4]} secondary={task[2]}/>\n                            <p>{task[5]}</p>\n                        </ListItem>\n                    </Card>\n                    );\n                }\n            })}\n            </div>\n        </Card>\n\n        )\n    }\n}\n\n\nexport default TaskCommits;\n",["73","74"],"/home/gaya/Documents/Work/Kursach/kursach/react-app/src/Dashboard.js",["75","76","77","78","79","80","81","82","83","84"],"import './App.css';\nimport React from \"react\";\nimport axios from 'axios'; \nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {Card, Form, Button} from \"react-bootstrap\";\nimport \"react-grid-layout/css/styles.css\";\nimport \"react-resizable/css/styles.css\";\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport RenderbyTitle from \"./RenderByTitle\";\nimport \"./accordion.css\";\nimport Search from './Search';\nimport CircleDiagram from './CircleDiagram';\nimport TaskCommits from \"./TaskCommits\";\nimport FailedTasks from \"./FailedTasks\";\n\nclass Table_render extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {data_: [], parsed_data: [[\"1\", \"administrator\", \"Pasha\", \"say hi\", \"done\", \"14:00\", \"12:00\"], [\"2\", \"worker\", \"Katya\", \"say Bye\", \"failed\", \"12:00\", \"10:00\"]], username: \"\"}\n        this.handleChange = this.handleChange.bind(this);\n        this.sort_data = this.sort_data.bind(this);\n      }\n    \n\n      postRequest() {\n        const url = \"/data\";\n        const formData = new FormData();\n        return axios.post(url, formData);\n      }\n    \n      getFile() { \n        this.postRequest().then((result) => {this.setState({data_: result.data});}).then(() => {this.parse_data(this.state.data_)});\n      }\n\n      componentDidMount() {\n        this.getFile();\n        this.sort_data();\n        // try {\n        //   setInterval(async () => {\n        //     this.getFile();\n        //   }, 1000);\n        // } catch(e) {\n        //   console.log(e);\n        // }\n      }\n\n      handleChange() {\n        this.setState({checkedA: true, checkedB: true});\n      }\n\n      parse_data(object) {\n        var jsonData = object;\n        var task = [];\n        var tasks = [];\n        for (var i = 0; i < jsonData.tasks.length; i++) {\n          task.push(jsonData.tasks[i].id);\n          task.push(jsonData.tasks[i].position);\n          task.push(jsonData.tasks[i].name);\n          task.push(jsonData.tasks[i].task_name);\n          task.push(jsonData.tasks[i].status);\n          task.push(jsonData.tasks[i].status_changed);\n          task.push(jsonData.tasks[i].time);\n          tasks.push(task);\n          task = [];\n        }\n        this.setState({parsed_data: tasks});\n      }\n\n      sort_data() {\n        var myDict = {};\n          this.state.parsed_data.map(function(task) {\n              if (myDict[task[0]] == undefined) {\n                  myDict[task[0]] = \"status: \" + task[4] + \"   time: \" + task[5] + \"#\";\n              }\n              else {\n                  myDict[task[0]] += \"status: \" + task[4] + \"   time: \" + task[5] + \"#\";\n              }\n          })\n        this.setState({dict: myDict});\n      }\n\n      render () {\n        return (\n          <div style={{display: 'flex'}}>\n            <div style={{flex: 'auto', width: \"50%\", margin: \"2%\"}}>\n              <Card style={{padding: \"5%\"}}>\n                <Search data={this.state.parsed_data}/>\n              </Card>\n            </div>\n            <div style={{flex: \"auto\", width: \"50%\", margin: \"2%\"}}>\n              <Card style={{padding: \"5%\"}}>\n                <CircleDiagram data={this.state.parsed_data}/>\n                <TaskCommits data={this.state.parsed_data}/>\n                <FailedTasks data={this.state.parsed_data}/>\n              </Card>\n            </div>\n          </div>\n        )\n      }\n} \n\nexport default Table_render;",["85","86"],"/home/gaya/Documents/Work/Kursach/kursach/react-app/src/index.js",[],"/home/gaya/Documents/Work/Kursach/kursach/react-app/src/FailedTasks.js",["87","88","89","90","91","92","93","94"],"import React from 'react';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport {Card, Form, Button} from \"react-bootstrap\";\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport './accordion.css';\n\nclass FailedTasks extends React.Component {\n    constructor(props) {\n        super(props);\n        this.compare = this.compare.bind(this);\n    }\n\n    compare(first, second) {\n        let myFirst = first[5];\n        let mySecond = second[5];\n        if (first[5].length < 5) {\n            myFirst = \"0\" + first; \n        }\n        if (second[5].length < 5) {\n            mySecond = \"0\" + second;\n        }\n        if (myFirst > mySecond) {\n            console.log(\"first > second: \" + first[5] + \" \" + second[5]);\n            return -1;\n        }\n        else {\n            console.log(\"second > first: \" + first[5] + \" \" + second[5]);\n            return 1;\n        }\n    }\n\n    render() {\n        let items = [];\n        this.props.data.map(function(task) {\n            if (task[4] == \"failed\") {\n                items.push(task);\n            }\n        }) \n        items.sort(this.compare);\n        return (\n            <Card style={{margin: \"2%\", padding: \"2%\"}} >\n             <Card.Title> Failed tasks </Card.Title>   \n            <div style={{overflowY: \"scroll\", height: \"300px\"}}>\n            {items.map(function(task) {\n                    return (\n                    <Card>                    \n                        <ListItem className=\"failed-text\">\n                            <ListItemText  primary={\"task id: \" + task[0] + \"  \" + task[3] + \"  \" + task[4]} secondary={task[2]}/>\n                            <p>{task[5]}</p>\n                        </ListItem>\n                    </Card>\n                    );\n            })}\n            </div>\n            </Card> \n\n        );\n    }\n}  \n\nexport default FailedTasks;","/home/gaya/Documents/Work/Kursach/kursach/react-app/src/Registration.js",[],"/home/gaya/Documents/Work/Kursach/kursach/react-app/src/RenderByName.js",["95","96","97","98","99","100","101"],"import React from 'react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport './accordion.css';\n\nclass NameAccordion extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        var idSet = new Set();\n        var myDict = {};\n        this.props.data.map(function(task) {\n            if (myDict[task[0] + task[2]] == undefined) {\n                myDict[task[0] + task[2]] = \"status: \" + task[4] + \"   time: \" + task[5] + \"#\";\n            }\n            else {\n                myDict[task[0] + task[2]] += \"status: \" + task[4] + \"   time: \" + task[5] + \"#\";\n            }\n        })\n        return (\n            <div className=\"accordion-body\">\n                {this.props.data.map((sent) => {\n                    if (sent[2] == this.props.name && !idSet.has(sent[0])) {\n                        idSet.add(sent[0]);\n                        if (sent[4] == \"done\") {\n                            return ( \n                                <div>\n                                    <Accordion>\n                                        <AccordionSummary\n                                        expandIcon={<ExpandMoreIcon />}\n                                        aria-controls=\"panel1a-content\"\n                                        id=\"panel1a-header\">\n                                            <Typography className=\"done-text\">\n                                                {sent[3]}\n                                            </Typography>\n                                        </AccordionSummary>\n                                        <AccordionDetails style={{display: \"block\"}}>\n                                            {myDict[sent[0] + sent[2]].split('#').map(function(str) { \n                                                return (\n                                                    <Typography>\n                                                        {str}\n                                                    </Typography>\n                                                )\n                                            })}\n                                        </AccordionDetails>\n                                    </Accordion>\n                                </div>\n                            );\n                        }\n                        else if (sent[3] == \"pending\") {\n                            return ( \n                                <div>\n                                    <Accordion>\n                                        <AccordionSummary\n                                        expandIcon={<ExpandMoreIcon />}\n                                        aria-controls=\"panel1a-content\"\n                                        id=\"panel1a-header\"\n                                        >\n                                            <Typography className=\"pending-text\">\n                                                {sent[3]}\n                                            </Typography>\n                                        </AccordionSummary>\n                                        <AccordionDetails style={{display: \"block\"}}>\n                                            {myDict[sent[0] + sent[2]].split('#').map(function(str) { \n                                                return (\n                                                    <Typography>\n                                                        {str}\n                                                    </Typography>\n                                                )\n                                            })}\n                                        </AccordionDetails>\n                                    </Accordion>\n                                </div>\n                            );\n                        }\n                        else {\n                            return ( \n                                <div>\n                                    <Accordion>\n                                        <AccordionSummary\n                                        expandIcon={<ExpandMoreIcon />}\n                                        aria-controls=\"panel1a-content\"\n                                        id=\"panel1a-header\">\n                                            <Typography className=\"failed-text\">\n                                                {sent[3]}\n                                            </Typography>\n                                        </AccordionSummary>\n                                        <AccordionDetails style={{display: \"block\"}}>\n                                            {myDict[sent[0] + sent[2]].split('#').map(function(str) { \n                                                return (\n                                                    <Typography>\n                                                        {str}\n                                                    </Typography>\n                                                )\n                                            })}\n                                        </AccordionDetails>\n                                    </Accordion>\n                                </div>\n                            );\n                        }\n                    }\n                })}\n            </div>\n        );\n    }\n    \n}\n\nexport default NameAccordion;","/home/gaya/Documents/Work/Kursach/kursach/react-app/src/RenderAllTasks.js",["102","103"],"/home/gaya/Documents/Work/Kursach/kursach/react-app/src/Search.js",["104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122"],"/home/gaya/Documents/Work/Kursach/kursach/react-app/src/reportWebVitals.js",[],{"ruleId":"123","severity":1,"message":"124","line":8,"column":47,"nodeType":"125","messageId":"126","endLine":8,"endColumn":49},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":14,"column":36,"nodeType":"133","messageId":"134","endLine":14,"endColumn":38},{"ruleId":"123","severity":1,"message":"124","line":15,"column":29,"nodeType":"125","messageId":"126","endLine":15,"endColumn":31},{"ruleId":"135","severity":1,"message":"136","line":2,"column":8,"nodeType":"137","messageId":"138","endLine":2,"endColumn":21},{"ruleId":"135","severity":1,"message":"139","line":3,"column":8,"nodeType":"137","messageId":"138","endLine":3,"endColumn":12},{"ruleId":"135","severity":1,"message":"140","line":5,"column":8,"nodeType":"137","messageId":"138","endLine":5,"endColumn":20},{"ruleId":"135","severity":1,"message":"141","line":7,"column":8,"nodeType":"137","messageId":"138","endLine":7,"endColumn":27},{"ruleId":"135","severity":1,"message":"142","line":8,"column":15,"nodeType":"137","messageId":"138","endLine":8,"endColumn":19},{"ruleId":"135","severity":1,"message":"143","line":8,"column":21,"nodeType":"137","messageId":"138","endLine":8,"endColumn":27},{"ruleId":"131","severity":1,"message":"144","line":41,"column":29,"nodeType":"145","messageId":"146","endLine":41,"endColumn":37},{"ruleId":"123","severity":1,"message":"147","line":42,"column":25,"nodeType":"125","messageId":"126","endLine":42,"endColumn":27},{"ruleId":"123","severity":1,"message":"124","line":55,"column":29,"nodeType":"125","messageId":"126","endLine":55,"endColumn":31},{"ruleId":"127","replacedBy":"148"},{"ruleId":"129","replacedBy":"149"},{"ruleId":"135","severity":1,"message":"142","line":5,"column":15,"nodeType":"137","messageId":"138","endLine":5,"endColumn":19},{"ruleId":"135","severity":1,"message":"143","line":5,"column":21,"nodeType":"137","messageId":"138","endLine":5,"endColumn":27},{"ruleId":"135","severity":1,"message":"150","line":8,"column":8,"nodeType":"137","messageId":"138","endLine":8,"endColumn":17},{"ruleId":"135","severity":1,"message":"151","line":9,"column":8,"nodeType":"137","messageId":"138","endLine":9,"endColumn":24},{"ruleId":"135","severity":1,"message":"152","line":10,"column":8,"nodeType":"137","messageId":"138","endLine":10,"endColumn":24},{"ruleId":"135","severity":1,"message":"153","line":11,"column":8,"nodeType":"137","messageId":"138","endLine":11,"endColumn":18},{"ruleId":"135","severity":1,"message":"154","line":12,"column":8,"nodeType":"137","messageId":"138","endLine":12,"endColumn":22},{"ruleId":"135","severity":1,"message":"155","line":13,"column":8,"nodeType":"137","messageId":"138","endLine":13,"endColumn":21},{"ruleId":"131","severity":1,"message":"144","line":75,"column":38,"nodeType":"145","messageId":"146","endLine":75,"endColumn":46},{"ruleId":"123","severity":1,"message":"124","line":76,"column":35,"nodeType":"125","messageId":"126","endLine":76,"endColumn":37},{"ruleId":"127","replacedBy":"156"},{"ruleId":"129","replacedBy":"157"},{"ruleId":"135","severity":1,"message":"136","line":2,"column":8,"nodeType":"137","messageId":"138","endLine":2,"endColumn":21},{"ruleId":"135","severity":1,"message":"139","line":3,"column":8,"nodeType":"137","messageId":"138","endLine":3,"endColumn":12},{"ruleId":"135","severity":1,"message":"140","line":5,"column":8,"nodeType":"137","messageId":"138","endLine":5,"endColumn":20},{"ruleId":"135","severity":1,"message":"141","line":7,"column":8,"nodeType":"137","messageId":"138","endLine":7,"endColumn":27},{"ruleId":"135","severity":1,"message":"142","line":8,"column":15,"nodeType":"137","messageId":"138","endLine":8,"endColumn":19},{"ruleId":"135","severity":1,"message":"143","line":8,"column":21,"nodeType":"137","messageId":"138","endLine":8,"endColumn":27},{"ruleId":"131","severity":1,"message":"144","line":39,"column":29,"nodeType":"145","messageId":"146","endLine":39,"endColumn":37},{"ruleId":"123","severity":1,"message":"124","line":40,"column":25,"nodeType":"125","messageId":"126","endLine":40,"endColumn":27},{"ruleId":"158","severity":1,"message":"159","line":10,"column":5,"nodeType":"160","messageId":"161","endLine":12,"endColumn":6},{"ruleId":"131","severity":1,"message":"144","line":17,"column":29,"nodeType":"145","messageId":"146","endLine":17,"endColumn":37},{"ruleId":"123","severity":1,"message":"124","line":18,"column":43,"nodeType":"125","messageId":"126","endLine":18,"endColumn":45},{"ruleId":"131","severity":1,"message":"132","line":27,"column":45,"nodeType":"133","messageId":"134","endLine":27,"endColumn":47},{"ruleId":"123","severity":1,"message":"124","line":28,"column":33,"nodeType":"125","messageId":"126","endLine":28,"endColumn":35},{"ruleId":"123","severity":1,"message":"124","line":30,"column":37,"nodeType":"125","messageId":"126","endLine":30,"endColumn":39},{"ruleId":"123","severity":1,"message":"124","line":55,"column":42,"nodeType":"125","messageId":"126","endLine":55,"endColumn":44},{"ruleId":"135","severity":1,"message":"162","line":7,"column":8,"nodeType":"137","messageId":"138","endLine":7,"endColumn":20},{"ruleId":"131","severity":1,"message":"132","line":15,"column":38,"nodeType":"133","messageId":"134","endLine":15,"endColumn":40},{"ruleId":"135","severity":1,"message":"163","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":20},{"ruleId":"135","severity":1,"message":"164","line":3,"column":10,"nodeType":"137","messageId":"138","endLine":3,"endColumn":15},{"ruleId":"135","severity":1,"message":"165","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":17},{"ruleId":"135","severity":1,"message":"166","line":5,"column":8,"nodeType":"137","messageId":"138","endLine":5,"endColumn":24},{"ruleId":"135","severity":1,"message":"167","line":6,"column":8,"nodeType":"137","messageId":"138","endLine":6,"endColumn":16},{"ruleId":"135","severity":1,"message":"168","line":7,"column":8,"nodeType":"137","messageId":"138","endLine":7,"endColumn":32},{"ruleId":"135","severity":1,"message":"169","line":8,"column":8,"nodeType":"137","messageId":"138","endLine":8,"endColumn":20},{"ruleId":"135","severity":1,"message":"170","line":9,"column":8,"nodeType":"137","messageId":"138","endLine":9,"endColumn":16},{"ruleId":"135","severity":1,"message":"171","line":10,"column":8,"nodeType":"137","messageId":"138","endLine":10,"endColumn":22},{"ruleId":"135","severity":1,"message":"172","line":11,"column":8,"nodeType":"137","messageId":"138","endLine":11,"endColumn":17},{"ruleId":"135","severity":1,"message":"173","line":17,"column":9,"nodeType":"137","messageId":"138","endLine":17,"endColumn":13},{"ruleId":"135","severity":1,"message":"143","line":17,"column":21,"nodeType":"137","messageId":"138","endLine":17,"endColumn":27},{"ruleId":"131","severity":1,"message":"144","line":52,"column":29,"nodeType":"145","messageId":"146","endLine":52,"endColumn":37},{"ruleId":"123","severity":1,"message":"124","line":54,"column":33,"nodeType":"125","messageId":"126","endLine":54,"endColumn":35},{"ruleId":"123","severity":1,"message":"124","line":66,"column":36,"nodeType":"125","messageId":"126","endLine":66,"endColumn":38},{"ruleId":"131","severity":1,"message":"174","line":92,"column":41,"nodeType":"145","messageId":"134","endLine":92,"endColumn":49},{"ruleId":"123","severity":1,"message":"124","line":93,"column":66,"nodeType":"125","messageId":"126","endLine":93,"endColumn":68},{"ruleId":"131","severity":1,"message":"174","line":116,"column":45,"nodeType":"145","messageId":"134","endLine":116,"endColumn":53},{"ruleId":"123","severity":1,"message":"124","line":117,"column":66,"nodeType":"125","messageId":"126","endLine":117,"endColumn":68},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["175"],"no-negated-in-lhs",["176"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'ListSubheader' is defined but never used.","Identifier","unusedVar","'List' is defined but never used.","'ListItemIcon' is defined but never used.","'InsertDriveFileIcon' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","Array.prototype.map() expects a return value from function.","FunctionExpression","expectedInside","Expected '!==' and instead saw '!='.",["175"],["176"],"'Accordion' is defined but never used.","'AccordionDetails' is defined but never used.","'AccordionSummary' is defined but never used.","'Typography' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'RenderbyTitle' is defined but never used.",["175"],["176"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'RenderByName' is defined but never used.","'withStyles' is defined but never used.","'green' is defined but never used.","'FormGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'CheckBoxOutlineBlankIcon' is defined but never used.","'CheckBoxIcon' is defined but never used.","'Favorite' is defined but never used.","'FavoriteBorder' is defined but never used.","'TextField' is defined but never used.","'Card' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of function.","no-global-assign","no-unsafe-negation"]