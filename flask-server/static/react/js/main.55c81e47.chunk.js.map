{"version":3,"sources":["RenderByName.js","RenderByTitle.js","RenderAllTasks.js","Search.js","CircleDiagram.js","TaskCommits.js","FailedTasks.js","Dashboard.js","Registration.js","PrivateRoute.js","Main.js","NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["NameAccordion","props","idSet","Set","myDict","this","data","map","task","undefined","className","sent","name","has","add","Accordion","AccordionSummary","expandIcon","aria-controls","id","Typography","AccordionDetails","style","display","split","str","React","Component","mySet","position","RenderByName","RenderAllTasks","margin","RenderByTitle","Search","state","checkBoxName","checkBoxTask","search_text","handleChangeSearch","bind","onChangeByName","onChangeByTask","event","setState","target","checked","value","alert","z","List1","selt","nameSet","padding","Form","Row","marginBottom","Control","request","onChange","type","placeholder","Group","Check","label","includes","CircleDiagram","all","done","pending","failed","options","animationEnabled","startAngle","toolTipContent","showInLegend","legendText","indexLabelFontSize","indexLabel","dataPoints","y","Math","round","color","TaskCommits","compare","first","second","myFirst","mySecond","length","console","log","items","push","sort","Card","textAlign","Title","overflowY","height","ListItem","ListItemText","primary","secondary","FailedTasks","Table_render","data_","parsed_data","username","handleChange","sort_data","formData","FormData","axios","post","postRequest","then","result","parse_data","getFile","checkedA","checkedB","object","jsonData","tasks","i","task_name","status","status_changed","time","dict","flex","width","Registration","check","password","handleChangeUsername","handleChangePassword","e","preventDefault","response","localStorage","setItem","funcIsLogged","to","component","Dashboard","marginLeft","marginRight","marginTop","controlId","Label","Button","variant","onClick","PrivateRoute","rest","render","getItem","Main","from","exact","path","useStyles","makeStyles","theme","title","flexGrow","fontSize","fontWeight","defaultProps","bgcolor","borderColor","m","border","alignItems","justifyContent","NavBar","classes","history","useHistory","isLogged","AppBar","Toolbar","Box","App","changeIsLogged","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"js/main.55c81e47.chunk.js","sourcesContent":["import React from 'react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport './accordion.css';\n\nclass NameAccordion extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        var idSet = new Set();\n        var myDict = {};\n        this.props.data.map(function(task) {\n            if (myDict[task[0] + task[2]] == undefined) {\n                myDict[task[0] + task[2]] = \"status: \" + task[4] + \"   time: \" + task[5] + \"#\";\n            }\n            else {\n                myDict[task[0] + task[2]] += \"status: \" + task[4] + \"   time: \" + task[5] + \"#\";\n            }\n        })\n        return (\n            <div className=\"accordion-body\">\n                {this.props.data.map((sent) => {\n                    if (sent[2] == this.props.name && !idSet.has(sent[0])) {\n                        idSet.add(sent[0]);\n                        if (sent[4] == \"done\") {\n                            return ( \n                                <div>\n                                    <Accordion>\n                                        <AccordionSummary\n                                        expandIcon={<ExpandMoreIcon />}\n                                        aria-controls=\"panel1a-content\"\n                                        id=\"panel1a-header\">\n                                            <Typography className=\"done-text\">\n                                                {sent[3]}\n                                            </Typography>\n                                        </AccordionSummary>\n                                        <AccordionDetails style={{display: \"block\"}}>\n                                            {myDict[sent[0] + sent[2]].split('#').map(function(str) { \n                                                return (\n                                                    <Typography>\n                                                        {str}\n                                                    </Typography>\n                                                )\n                                            })}\n                                        </AccordionDetails>\n                                    </Accordion>\n                                </div>\n                            );\n                        }\n                        else if (sent[3] == \"pending\") {\n                            return ( \n                                <div>\n                                    <Accordion>\n                                        <AccordionSummary\n                                        expandIcon={<ExpandMoreIcon />}\n                                        aria-controls=\"panel1a-content\"\n                                        id=\"panel1a-header\"\n                                        >\n                                            <Typography className=\"pending-text\">\n                                                {sent[3]}\n                                            </Typography>\n                                        </AccordionSummary>\n                                        <AccordionDetails style={{display: \"block\"}}>\n                                            {myDict[sent[0] + sent[2]].split('#').map(function(str) { \n                                                return (\n                                                    <Typography>\n                                                        {str}\n                                                    </Typography>\n                                                )\n                                            })}\n                                        </AccordionDetails>\n                                    </Accordion>\n                                </div>\n                            );\n                        }\n                        else {\n                            return ( \n                                <div>\n                                    <Accordion>\n                                        <AccordionSummary\n                                        expandIcon={<ExpandMoreIcon />}\n                                        aria-controls=\"panel1a-content\"\n                                        id=\"panel1a-header\">\n                                            <Typography className=\"failed-text\">\n                                                {sent[3]}\n                                            </Typography>\n                                        </AccordionSummary>\n                                        <AccordionDetails style={{display: \"block\"}}>\n                                            {myDict[sent[0] + sent[2]].split('#').map(function(str) { \n                                                return (\n                                                    <Typography>\n                                                        {str}\n                                                    </Typography>\n                                                )\n                                            })}\n                                        </AccordionDetails>\n                                    </Accordion>\n                                </div>\n                            );\n                        }\n                    }\n                })}\n            </div>\n        );\n    }\n    \n}\n\nexport default NameAccordion;","import React from 'react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport RenderByName from './RenderByName';\nimport './accordion.css';\n\nfunction NameAccordion(props) {\n    var mySet = new Set();\n    return (\n        <div className=\"accordion-body\">\n            {props.data.map((sent) => {\n                if (sent[1] == props.position && !mySet.has(sent[2])) {\n                    mySet.add(sent[2]);\n                    return ( \n                        <div>\n                            <Accordion>\n                                <AccordionSummary\n                                expandIcon={<ExpandMoreIcon />}\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\">\n                                    <Typography>\n                                        {sent[2]}\n                                    </Typography>\n                                </AccordionSummary>\n                                <AccordionDetails>\n                                    <RenderByName data={props.data} name={sent[2]}/>\n                                </AccordionDetails>\n                            </Accordion>\n                        </div>\n                    );\n                }\n            })}\n        </div>\n    );\n}\n\nexport default NameAccordion;","import React from 'react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport RenderByName from './RenderByName';\nimport './accordion.css';\nimport RenderByTitle from \"./RenderByTitle\";\n\nfunction RenderAllTasks(props) {\n    var mySet = new Set();\n    return (\n        <div className=\"accordion-body\">\n              {props.data.map((sent) => {\n                  if (!mySet.has(sent[1])) {\n                      mySet.add(sent[1]);\n                      return ( \n                            <Accordion style={{margin: \"2%\"}}> \n                                <AccordionSummary\n                                expandIcon={<ExpandMoreIcon />}\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\">\n                                    <Typography>\n                                        {sent[1]}\n                                    </Typography>\n                                </AccordionSummary>\n                                <AccordionDetails>\n                                <RenderByTitle data={props.data} position={sent[1]}/>\n                                </AccordionDetails>\n                            </Accordion>\n                          \n                      );\n                  }\n              })}\n        </div>\n    );\n}\n\nexport default RenderAllTasks;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport TextField from '@material-ui/core/TextField';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {Card, Form, Button} from \"react-bootstrap\";\nimport RenderByName from \"./RenderByName\";\nimport RenderAllTasks from \"./RenderAllTasks\";\nimport './accordion.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {checkBoxName: false, checkBoxTask: false, search_text: \"\"};\n        this.handleChangeSearch = this.handleChangeSearch.bind(this); \n        this.onChangeByName = this.onChangeByName.bind(this);\n        this.onChangeByTask = this.onChangeByTask.bind(this);\n      }\n\n\n    onChangeByName(event) {\n        this.setState({ checkBoxName: event.target.checked});\n    };\n\n    onChangeByTask(event) {\n        this.setState({checkBoxTask: event.target.checked})\n    }\n\n    handleChangeSearch(event) {    \n        if (!this.state.checkBoxName && !this.state.checkBoxTask) {\n            alert(\"At least one of checkboxes should be checked\");\n        }\n        else {\n            this.setState({ search_text: event.target.value}); \n        }\n    }\n\n    render() {\n\n        var myDict = {};\n        this.props.data.map(function(task) {\n            var z = \"status: \" + task[4] + \"   time: \" + task[5] + \"#\";\n            if (myDict[task[0]] == undefined) {\n                myDict[task[0]] = z;\n            }\n            else {\n                myDict[task[0]] += \"status: \" + task[4] + \"   time: \" + task[5] + \"#\";\n            }\n        })\n\n        var List1 = [];\n        var selt = this;\n        var mySet = new Set();\n        var nameSet = new Set();\n        if (selt.state.search_text == \"\") {\n            return (\n                <div style={{position: 'relative'}}>\n                    <div style={{padding: \"3%\"}} >\n                        <Form.Row style={{marginBottom: \"2%\"}}>\n                            <Form.Control value={this.state.request} onChange={this.handleChangeSearch} type=\"search_text\" placeholder=\"Enter...\" />\n                        </Form.Row>\n                        <Form.Group>\n                            <Form.Row>\n                                <Form.Check type=\"checkbox\" onChange={this.onChangeByName} label=\"Search by name\"/>\n                            </Form.Row>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Row>\n                                <Form.Check type=\"checkbox\" onChange={this.onChangeByTask} label=\"Search by task\"/>\n                            </Form.Row>\n                        </Form.Group>\n                        <h4>Tasks</h4>\n                        <RenderAllTasks data={selt.props.data}/>\n                    </div>\n                </div>\n            );\n            \n        }\n        else { \n            if (this.state.checkBoxName) {\n            List1 = this.props.data.map(function(task) {\n                    if (task[2].includes(selt.state.search_text) == true && !nameSet.has(task[2])) {\n                        nameSet.add(task[2]);\n                        return (\n                            <Accordion style={{marginBottom: \"2%\"}}>\n                                <AccordionSummary\n                                expandIcon={<ExpandMoreIcon />}\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\">\n                                    <Typography>\n                                        {task[2]}\n                                    </Typography>\n                                </AccordionSummary>\n                                <AccordionDetails>\n                                    <Typography>\n                                        <RenderByName data={selt.props.data} name={task[2]}/>\n                                    </Typography>\n                                </AccordionDetails>\n                            </Accordion>\n                        );\n                    }\n                });\n            }\n            else {\n                List1 = this.props.data.map(function(task) {\n                    if (task[3].includes(selt.state.search_text) == true && !mySet.has(task[0])) {\n                        mySet.add(task[0])\n                        return (\n                            <Accordion style={{marginBottom: \"2%\"}}>\n                                <AccordionSummary\n                                expandIcon={<ExpandMoreIcon />}\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\">\n                                    <Typography>\n                                        {task[3]}\n                                    </Typography>\n                                </AccordionSummary>\n                                <AccordionDetails style={{display: \"block\"}}>\n                                    {myDict[task[0]].split('#').map(function(str) { \n                                        return (\n                                            <Typography>\n                                                {str}\n                                            </Typography>\n                                        )\n                                    })}\n                                </AccordionDetails>\n                            </Accordion>\n                        );\n                    }\n                });\n            }\n        \n            return(\n                <div style={{position: 'relative'}}>\n                    <div style={{padding: \"3%\"}}>\n                        <Form.Row style={{marginBottom: \"2%\"}}>\n                            <Form.Control value={this.state.request} onChange={this.handleChangeSearch} type=\"search_text\" placeholder=\"Enter...\" />\n                        </Form.Row>\n                        <Form.Group>\n                            <Form.Row>\n                                <Form.Check type=\"checkbox\" onChange={this.onChangeByName} label=\"Search by name\"/>\n                            </Form.Row>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Row>\n                                <Form.Check type=\"checkbox\" onChange={this.onChangeByTask} label=\"Search by task\"/>\n                            </Form.Row>\n                        </Form.Group>\n                        <h4>Tasks</h4>\n                        <div style={{margin: \"2%\"}}>\n                            {List1}\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n\n}\n\nexport default Search;","import React from 'react';\nimport {CanvasJSChart} from 'canvasjs-react-charts';\n\nclass CircleDiagram extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render () {\n        let done = 0;\n        let pending = 0;\n        let failed = 0;\n        let all = 0;\n        this.props.data.map(function(task) {\n            if (task[4] == \"done\") {\n                done++;\n            }\n            else if (task[4] == \"pending\") {\n                pending++;\n            }\n            else {\n                failed++;\n            }\n        })\n        all = done + pending + failed;\n\n        var options = {\n\t\t\tanimationEnabled: true,\n\t\t\t//title: {\n\t\t\t//\ttext: \"Tasks traffic\"\n\t\t\t//},\n\t\t\tdata: [{\n\t\t\t\ttype: \"pie\",\n\t\t\t\tstartAngle: 75,\n\t\t\t\ttoolTipContent: \"<b>{label}</b>: {y}%\",\n\t\t\t\tshowInLegend: \"true\",\n\t\t\t\tlegendText: \"{label}\",\n\t\t\t\tindexLabelFontSize: 16,\n\t\t\t\tindexLabel: \"{label} - {y}%\",\n\t\t\t\tdataPoints: [\n\t\t\t\t\t{ y: Math.round(done / all * 100) / 100, label: \"Done\", color: \"#16AC23\" },\n\t\t\t\t\t{ y: Math.round(pending / all * 100) / 100, label: \"Pending\", color: \"#E7CF24\" },\n\t\t\t\t\t{ y: Math.round(failed  / all * 100) / 100, label: \"Failed\", color: \"#DC3A19\" },\n\t\t\t\t]\n\t\t\t}]\n\t\t}\n        return ( \n            <div style={{margin: \"2%\", padding: \"2%\"}} >\n\t\t\t    <CanvasJSChart options = {options}/>\n            </div>\n        );\n    }\n}\n\nexport default CircleDiagram;","import React from 'react';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport {Card, Form, Button} from \"react-bootstrap\";\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport './accordion.css';\n\n\nclass TaskCommits extends React.Component {\n    constructor(props) {\n        super(props);\n        this.compare = this.compare.bind(this);\n    }\n\n    compare(first, second) {\n        let myFirst = first[5];\n        let mySecond = second[5];\n        if (first[5].length < 5) {\n            myFirst = \"0\" + first; \n        }\n        if (second[5].length < 5) {\n            mySecond = \"0\" + second;\n        }\n        if (myFirst > mySecond) {\n            console.log(\"first > second: \" + first[5] + \" \" + second[5]);\n            return -1;\n        }\n        else {\n            console.log(\"second > first: \" + first[5] + \" \" + second[5]);\n            return 1;\n        }\n    }\n\n\n    render () {\n        var items = [];\n        this.props.data.map(function(task) {\n            if (task[4] != \"pending\") {\n                items.push(task);\n            }\n        }) \n        items.sort(this.compare);\n\n\n        return (\n            \n            <Card style={{margin: \"2%\", padding: \"2%\", textAlign: \"inherit\"}} >\n            <Card.Title> Status changed </Card.Title>\n            <div style={{overflowY: \"scroll\", height: \"300px\"}}>\n            {items.map(function(task) {\n                if (task[4] == \"done\") {\n                    return (\n                        <Card>                    \n                            <ListItem className=\"done-text\">\n                                <ListItemText  primary={\"task id: \" + task[0] + \"  \" + task[3] + \"  \" + task[4]} secondary={task[2]}/>\n                                <p>{task[5]}</p>\n                            </ListItem>\n                        </Card>\n                        );\n                }\n                else {\n                    return (\n                    <Card>                    \n                        <ListItem className=\"failed-text\">\n                            <ListItemText  primary={\"task id: \" + task[0] + \"  \" + task[3] + \"  \" + task[4]} secondary={task[2]}/>\n                            <p>{task[5]}</p>\n                        </ListItem>\n                    </Card>\n                    );\n                }\n            })}\n            </div>\n        </Card>\n\n        )\n    }\n}\n\n\nexport default TaskCommits;\n","import React from 'react';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport {Card, Form, Button} from \"react-bootstrap\";\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport './accordion.css';\n\nclass FailedTasks extends React.Component {\n    constructor(props) {\n        super(props);\n        this.compare = this.compare.bind(this);\n    }\n\n    compare(first, second) {\n        let myFirst = first[5];\n        let mySecond = second[5];\n        if (first[5].length < 5) {\n            myFirst = \"0\" + first; \n        }\n        if (second[5].length < 5) {\n            mySecond = \"0\" + second;\n        }\n        if (myFirst > mySecond) {\n            console.log(\"first > second: \" + first[5] + \" \" + second[5]);\n            return -1;\n        }\n        else {\n            console.log(\"second > first: \" + first[5] + \" \" + second[5]);\n            return 1;\n        }\n    }\n\n    render() {\n        let items = [];\n        this.props.data.map(function(task) {\n            if (task[4] == \"failed\") {\n                items.push(task);\n            }\n        }) \n        items.sort(this.compare);\n        return (\n            <Card style={{margin: \"2%\", padding: \"2%\"}} >\n             <Card.Title> Failed tasks </Card.Title>   \n            <div style={{overflowY: \"scroll\", height: \"300px\"}}>\n            {items.map(function(task) {\n                    return (\n                    <Card>                    \n                        <ListItem className=\"failed-text\">\n                            <ListItemText  primary={\"task id: \" + task[0] + \"  \" + task[3] + \"  \" + task[4]} secondary={task[2]}/>\n                            <p>{task[5]}</p>\n                        </ListItem>\n                    </Card>\n                    );\n            })}\n            </div>\n            </Card> \n\n        );\n    }\n}  \n\nexport default FailedTasks;","import './App.css';\nimport React from \"react\";\nimport axios from 'axios'; \nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {Card, Form, Button} from \"react-bootstrap\";\nimport \"react-grid-layout/css/styles.css\";\nimport \"react-resizable/css/styles.css\";\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport RenderbyTitle from \"./RenderByTitle\";\nimport \"./accordion.css\";\nimport Search from './Search';\nimport CircleDiagram from './CircleDiagram';\nimport TaskCommits from \"./TaskCommits\";\nimport FailedTasks from \"./FailedTasks\";\n\nclass Table_render extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {data_: [], parsed_data: [[\"1\", \"administrator\", \"Pasha\", \"say hi\", \"done\", \"14:00\", \"12:00\"], [\"2\", \"worker\", \"Katya\", \"say Bye\", \"failed\", \"12:00\", \"10:00\"]], username: \"\"}\n        this.handleChange = this.handleChange.bind(this);\n        this.sort_data = this.sort_data.bind(this);\n      }\n    \n\n      postRequest() {\n        const url = \"/data\";\n        const formData = new FormData();\n        return axios.post(url, formData);\n      }\n    \n      getFile() { \n        this.postRequest().then((result) => {this.setState({data_: result.data});}).then(() => {this.parse_data(this.state.data_)});\n      }\n\n      componentDidMount() {\n        this.getFile();\n        this.sort_data();\n        // try {\n        //   setInterval(async () => {\n        //     this.getFile();\n        //   }, 1000);\n        // } catch(e) {\n        //   console.log(e);\n        // }\n      }\n\n      handleChange() {\n        this.setState({checkedA: true, checkedB: true});\n      }\n\n      parse_data(object) {\n        var jsonData = object;\n        var task = [];\n        var tasks = [];\n        for (var i = 0; i < jsonData.tasks.length; i++) {\n          task.push(jsonData.tasks[i].id);\n          task.push(jsonData.tasks[i].position);\n          task.push(jsonData.tasks[i].name);\n          task.push(jsonData.tasks[i].task_name);\n          task.push(jsonData.tasks[i].status);\n          task.push(jsonData.tasks[i].status_changed);\n          task.push(jsonData.tasks[i].time);\n          tasks.push(task);\n          task = [];\n        }\n        this.setState({parsed_data: tasks});\n      }\n\n      sort_data() {\n        var myDict = {};\n          this.state.parsed_data.map(function(task) {\n              if (myDict[task[0]] == undefined) {\n                  myDict[task[0]] = \"status: \" + task[4] + \"   time: \" + task[5] + \"#\";\n              }\n              else {\n                  myDict[task[0]] += \"status: \" + task[4] + \"   time: \" + task[5] + \"#\";\n              }\n          })\n        this.setState({dict: myDict});\n      }\n\n      render () {\n        return (\n          <div style={{display: 'flex'}}>\n            <div style={{flex: 'auto', width: \"50%\", margin: \"2%\"}}>\n              <Card style={{padding: \"5%\", textAlign: \"center\"}}>\n                <h2>Tasks monitor</h2>\n                <Search data={this.state.parsed_data}/>\n              </Card>\n            </div>\n            <div style={{flex: \"auto\", width: \"50%\", margin: \"2%\"}}>\n              <Card style={{padding: \"5%\", textAlign: \"center\"}}>\n              <h2>Status monitor</h2>\n                <CircleDiagram data={this.state.parsed_data}/>\n                <TaskCommits data={this.state.parsed_data}/>\n                <FailedTasks data={this.state.parsed_data}/>\n              </Card>\n            </div>\n          </div>\n        )\n      }\n} \n\nexport default Table_render;","import React from \"react\";\nimport axios from 'axios'; \nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {Card, Form, Button} from \"react-bootstrap\";\nimport { Redirect } from \"react-router\";\nimport Dashboard from \"./Dashboard\";\n\nclass Registration extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {check: false, password: \"\", username: \"\"}\n    this.postRequest = this.postRequest.bind(this);\n    this.handleChangeUsername = this.handleChangeUsername.bind(this);\n    this.handleChangePassword = this.handleChangePassword.bind(this);\n  }\n\n    postRequest(e) {\n        e.preventDefault();\n        axios.post(\"/verify\", {\"username\": this.state.username, \"password\": this.state.password}\n        ).then((response) => this.setState({check: response.data.result}));\n    }\n\n    handleChangeUsername(event) {    \n        this.setState({username: event.target.value});  \n    }\n\n    handleChangePassword (event) {    \n        this.setState({password: event.target.value});  \n    }\n\n    render () {\n        if (this.state.check) {\n            console.log(\"ok\");\n            localStorage.setItem(\"authToken\", \"true\");\n            localStorage.setItem(\"username\", this.state.username);\n            this.props.funcIsLogged(\"true\");\n            return <Redirect to=\"/dashboard\" component={Dashboard}/>\n        }\n        return (\n        <Card\n        style={{marginLeft: \"auto\", marginRight: \"auto\", marginTop: \"10%\", marginBottom: \"10%\", width: \"40%\" }}>\n            <Form style={{margin: \"5%\"}}>\n                <Form.Group controlId=\"formBasicUsername\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control value={this.state.username} onChange={this.handleChangeUsername} type=\"username\" placeholder=\"Enter username\" />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control value={this.state.password} onChange={this.handleChangePassword} type=\"password\" placeholder=\"Password\" />\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\" onClick={this.postRequest}>\n                    Submit\n                </Button>\n            </Form>\n        </Card>\n        )\n  }\n}\n\nexport default Registration;","import React from 'react';\nimport { Route, Redirect } from 'react-router';\n\nexport const PrivateRoute = ({ component: Component, ...rest}) => (\n    <Route\n        {...rest}\n        render={props =>\n            localStorage.getItem(\"authToken\") == \"true\" ? (\n              console.log(\"print component\"),\n                <Component {...props}/>\n            ) : ( \n              console.log(\"redirect\"),\n                <Redirect to='/registration'/> \n            )}\n    />\n  ); \n","import React from \"react\";\nimport { Switch, Route } from 'react-router-dom'\nimport Registration from \"./Registration\"\nimport Dashboard from \"./Dashboard\"\nimport { Redirect } from 'react-router';\nimport { PrivateRoute } from './PrivateRoute';\n\n\nconst Main = (props) => (\n  <main>\n    <Redirect  from='/'  to='/dashboard' exact  />\n    <Switch>\n      <Route exact path='/registration' component={() => (<Registration funcIsLogged={props.funcIsLogged} />)}/>\n      <PrivateRoute exact path='/dashboard' component={Dashboard}/>\n    </Switch>\n  </main>\n)\nexport default Main;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { useHistory } from \"react-router-dom\";\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    flexGrow: 1,\n    fontSize: 25,\n    fontWeight: 100\n  }\n\n}));\n\nconst defaultProps = {\n  bgcolor: 'inherit',\n  borderColor: 'white',\n  m: 1,\n  border: 1,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  style: { width: '7rem', height: '3rem' }\n\n};\n\n\nexport default function NavBar(props) {\n\n    function logout() {\n        localStorage.setItem(\"authToken\", \"false\");\n        props.funcIsLogged(\"false\");\n        history.push(\"/registration\");\n    }\n\n    const classes = useStyles();\n    const history = useHistory();\n\n    if (props.isLogged == \"true\") {\n      return (\n        <div>\n        <AppBar position=\"static\">\n            <Toolbar>\n              <Typography className={classes.title}> BIG BROTHER ON PRODUCTION </Typography>\n              <Typography>\n                <Box {...defaultProps} > Pupkin Ivanov </Box> \n              </Typography>\n              <Button color=\"inherit\" onClick={() => logout()}>LOGOUT</Button>\n            </Toolbar>\n        </AppBar>\n      </div>\n      );\n    } \n    else {\n      return (\n        <div>\n        <AppBar position=\"static\">\n            <Toolbar>\n              <Typography className={classes.title}> BIG BROTHER ON PRODUCTION </Typography>\n              <Button color=\"inherit\">LOGIN</Button>\n            </Toolbar>\n        </AppBar>\n      </div>\n      );\n    }\n}\n","import './App.css';\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-grid-layout/css/styles.css\";\nimport \"react-resizable/css/styles.css\";\nimport Main from \"./Main\";\nimport Navbar from \"./NavBar\";\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {isLogged: localStorage.getItem(\"authToken\")}\n    this.changeIsLogged = this.changeIsLogged.bind(this);\n\n  }\n\n  changeIsLogged(value) {\n    this.setState({isLogged: value});\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar isLogged={this.state.isLogged} funcIsLogged={this.changeIsLogged}/>\n        <Main funcIsLogged={this.changeIsLogged}/>\n      </div>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render((\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>),\n  document.getElementById('root')\n);\n\n// asdsadadsdIf you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}