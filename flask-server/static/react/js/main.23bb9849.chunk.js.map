{"version":3,"sources":["logo.svg","Registration.js","Main.js","App.js","reportWebVitals.js","index.js"],"names":["Registration","props","state","check","password","username","postRequest","bind","handleChangeUsername","handleChangePassword","e","preventDefault","axios","post","this","then","response","setState","result","event","target","value","console","log","to","Card","style","marginLeft","marginRight","marginTop","marginBottom","width","Form","margin","Group","controlId","Label","Control","onChange","type","placeholder","Text","className","Check","label","Button","variant","onClick","React","Component","Main","exact","path","component","App","isLoad","data","quant","render_tasks","tasks","done_tasks","pending_tasks","failed_tasks","index","getFile","formData","FormData","printValues","JSON","parse","stringify","obj","index_var","k","Object","arr","length","push","text","who","time_limit","classificator","d_count","p_count","f_count","i","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"js/main.23bb9849.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"media/logo.6ce24c58.svg\";","import React, {Component} from \"react\";\nimport axios from 'axios'; \nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {Card, Form, Button} from \"react-bootstrap\";\nimport { Redirect } from \"react-router\";\n\nclass Registration extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {check: false, password: \"\", username: \"\"}\n    this.postRequest = this.postRequest.bind(this);\n    this.handleChangeUsername = this.handleChangeUsername.bind(this);\n    this.handleChangePassword = this.handleChangePassword.bind(this);\n  }\n\n    postRequest(e) {\n        e.preventDefault();\n        axios.post(\"/verify\", {\"username\": this.state.username, \"password\": this.state.password}\n        ).then((response) => this.setState({check: response.result}));\n    }\n\n    handleChangeUsername(event) {    \n        this.setState({username: event.target.value});  \n    }\n\n    handleChangePassword (event) {    \n        this.setState({password: event.target.value});  \n    }\n\n  render () {\n\n    console.log(this.state.check);\n    if (this.state.check) {\n        console.log(\"ok\");\n        return <Redirect to=\"/\"/>\n    }\n    return (\n    <Card\n    style={{marginLeft: \"auto\", marginRight: \"auto\", marginTop: \"10%\", marginBottom: \"10%\", width: \"40%\" }}>\n        <Form style={{margin: \"5%\"}}>\n            <Form.Group controlId=\"formBasicUsername\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control value={this.state.username} onChange={this.handleChangeUsername} type=\"username\" placeholder=\"Enter username\" />\n                <Form.Text className=\"text-muted\">\n                We'll never share your email with anyone else.\n                </Form.Text>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control value={this.state.password} onChange={this.handleChangePassword} type=\"password\" placeholder=\"Password\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicCheckbox\">\n                <Form.Check type=\"checkbox\" label=\"Check me out\" />\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\" onClick={this.postRequest}>\n                Submit\n            </Button>\n        </Form>\n    </Card>\n    )\n  }\n}\n\nexport default Registration;","import { Switch, Route } from 'react-router-dom'\nimport Registration from \"./Registration\"\nimport App from \"./App\"\n\nconst Main = () => (\n  <main>\n    <Switch>\n      <Route exact path='/' component={App}/>\n      <Route path='/registration' component={Registration}/>\n    </Switch>\n  </main>\n)\nexport default Main;","import logo from './logo.svg';\nimport './App.css';\nimport React, {Component} from \"react\";\nimport axios from 'axios'; \nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-grid-layout/css/styles.css\";\nimport \"react-resizable/css/styles.css\";\n\nimport {Card} from \"react-bootstrap\";\nimport GridLayout from 'react-grid-layout';\nimport Main from \"./Main\";\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {isLoad: false, data: \"\", quant: 0, render_tasks: [[\"failed\", \"tasks\", \"18:00\", \"professor\"]], tasks: [[\"failed\", \"tasks\", \"18:00\", \"professor\"]], done_tasks: [[\"done\", \"hi\", \"hello\"],], pending_tasks: [[\"pending\", \"hi\", \"hello\"]], failed_tasks: [[\"failed\", \"hi\", \"hello\"]], index: -1}\n    this.getFile = this.getFile.bind(this);\n  }\n\n  postRequest() {\n    const url = \"/data\";\n    const formData = new FormData();\n    return axios.post(url, formData);\n  }\n\n  getFile() { \n    this.postRequest().then(result => {\n      this.setState({data: result, isLoad: true}, \n        this.printValues(JSON.parse(JSON.stringify(this.state.data)).data))})\n  }\n\n  printValues(obj) {\n    var index_var = this.state.index;\n    for(var k in obj) {\n      if(obj[k] instanceof Object) {\n          index_var += 1;\n          this.setState({index: index_var})\n          this.printValues(obj[k]);\n      } \n      else {\n        var arr = this.state.tasks;\n        if (arr.length < (this.state.index + 1)) {\n          arr.push([]);\n        }\n        arr[index_var] = [];\n        arr[index_var].push(obj.state);\n        arr[index_var].push(obj.text);\n        arr[index_var].push(obj.who);\n        arr[index_var].push(obj.time_limit);\n        this.setState({tasks: arr})\n      };\n    }\n    this.classificator();\n  };\n\n  //кладет все такси в разные массивы исходя из состояния готовности\n  //возможно это не надо и достаточно сортировки при первом запуске\n  classificator() {\n    var d_count = 0;\n    var p_count = 0;\n    var f_count = 0;\n    for (var i = 0; i < this.state.index; i++) {\n      if (this.state.tasks[i][0] == \"done\") {\n        var arr = this.state.done_tasks;\n        if (arr.length < (d_count + 1)) {\n          arr.push([]);\n        }\n        arr[d_count] = this.state.tasks[i];\n        this.setState({done_tasks: arr});\n        d_count += 1;\n      }\n      else if (this.state.tasks[i][0] == \"pending\") {\n        var arr = this.state.pending_tasks;\n        if (arr.length < (p_count + 1)) {\n          arr.push([]);\n        }\n        arr[p_count] = this.state.tasks[i];\n        this.setState({pending_tasks: arr});\n        p_count += 1;\n      }\n      else if (this.state.tasks[i][0] == \"failed\") {\n        var arr = this.state.failed_tasks;\n        if (arr.length < (f_count + 1)) {\n          arr.push([]);\n        }\n        arr[f_count] = this.state.tasks[i];\n        this.setState({failed_tasks: arr});\n        f_count += 1;\n      }\n    }\n  }\n\n //обЪединяется все ткси в один массив в остортироаннам порядке, вызывается один раз в день в начале\n  merger() {\n    this.setState({render_tasks: this.state.done_tasks});\n    for (var i = 0; i < this.state.pending_tasks.length; i++) {\n      var arr = this.state.render_tasks;\n      arr.push([]);\n      arr[arr.length - 1] = this.state.pending_tasks[i];\n      this.setState({render_tasks: arr});\n    }\n    \n    for (var i = 0; i < this.state.failed_tasks.length; i++) {\n      var arr =this.state.failed_tasks;\n      arr.push([]);\n      arr[arr.length - 1] = this.state.pending_tasks[i];\n      this.setState({render_tasks: arr});\n    }\n  }\n\n  change() {\n\n  }\n\n\n  componentDidMount() {\n    // this.getFile();\n    // this.getFile();\n  }\n\n\n  render() {\n    const isLoad = this.state.isLoad;\n    let text;\n    if (isLoad) {\n      text = this.state.render_tasks[0][1];\n    } else {\n      text = \"Go to the supermarket\"\n    }\n    //console.log(\"done_tasks: \" + this.state.done_tasks);\n\n    \n\n    // const layout = [\n    //   {i: 'one', x: 5, y: 5, w: 10, h: 10, static: true},\n    //   {i: 'two', x: 1, y: 0, w: 3, h: 2, minW: 2, maxW: 4},\n    //   {i: 'three', x: 4, y: 0, w: 1, h: 2}\n    // ];\n    // layout.push({i: 'test', x: 100, y: 200, w: 10, h: 10})\n    // let cards = [];\n    // for (var i = 0; i < this.state.done_tasks; i++) {\n    //   cards.push(\n    //     <Card\n    //     bg=\"success\"\n    //     text=\"black\"\n    //     className=\"mb-2\"\n    //     style={{ width: '40rem' }}\n    //     >\n    //       <Card.Text style={{fontSize: \"40px\", textAlign: \"center\"}}>{this.state.done_tasks[i][1]}</Card.Text>\n    //     </Card>\n    //   );\n    // }\n    // for (var i = 0; i < this.state.pending_tasks; i++) {\n    //   cards.push(\n    //     <Card\n    //     bg=\"success\"\n    //     text=\"black\"\n    //     className=\"mb-2\"\n    //     style={{ width: '40rem' }}\n    //     >\n    //       <Card.Text style={{fontSize: \"40px\", textAlign: \"center\"}}>{this.state.pending_tasks[i][1]}</Card.Text>\n    //     </Card>\n    //   );\n    // }\n    return (\n\n\n\n      <Main/>\n\n      // this.state.done_tasks.map((variant, idx) => (\n      //   <Card\n      //   bg=\"success\"\n      //   text=\"black\"\n      //   className=\"mb-2\"\n      //   style={{marginLeft: \"auto\", marginRight: \"auto\", marginBottom: \"10px\", width: '40rem', bg: \"green\"}}\n      //   >\n      //     <Card.Text style={{fontSize: \"40px\", textAlign: \"center\"}}>{variant[1]}</Card.Text>\n      //   </Card>\n      //   )\n      // )\n\n      // <GridLayout className=\"layout\" layout={layout} cols={12} rowHeight={30} width={1200}>\n      //   <div key=\"one\">a</div>\n      //   <div key=\"two\">b</div>\n      //   <div key=\"three\">c</div>\n      //   <div key=\"test\">test</div>\n      // </GridLayout>\n\n      // <div\n      // style={{\n      //   display: \"flex\",\n      //   justifyContent: \"center\",\n      //   alignContent: \"center\"\n      // }}>\n      //   <button onClick={this.getFile}>\n      //     Get Data\n      //   </button>\n\n      //   <Card\n      //     bg=\"success\"\n      //     text=\"black\"\n      //     className=\"mb-2\"\n      //     style={{ width: '40rem' }}\n      //     >\n      //       <Card.Text style={{fontSize: \"40px\", textAlign: \"center\"}}>{text}</Card.Text>\n      //   </Card>\n      // </div>\n\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render((\n  <BrowserRouter>\n  <App />,\n  </BrowserRouter>),\n  document.getElementById('root')\n);\n\n// asdsadadsdIf you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}